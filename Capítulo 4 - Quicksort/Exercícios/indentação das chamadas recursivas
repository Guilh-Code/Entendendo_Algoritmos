ðŸ“¦ Exemplo: quicksort([10, 5, 2, 3])
Vamos representar as chamadas recursivas como uma Ã¡rvore.



ðŸŒ³ Etapa 1: Raiz da recursÃ£o

quicksort([10, 5, 2, 3])
pivÃ´ = 10
menores = [5, 2, 3]
maiores = []

          quicksort([10, 5, 2, 3])
                 â†“
      quicksort([5, 2, 3]) + [10] + quicksort([])

_____________________________________________________

ðŸŒ³ Etapa 2: Ordenando os menores [5, 2, 3]

quicksort([5, 2, 3])
pivÃ´ = 5
menores = [2, 3]
maiores = []

          quicksort([5, 2, 3])
                 â†“
      quicksort([2, 3]) + [5] + quicksort([])

_____________________________________________________

ðŸŒ³ Etapa 3: Ordenando [2, 3]

quicksort([2, 3])
pivÃ´ = 2
menores = []
maiores = [3]

          quicksort([2, 3])
               â†“
      quicksort([]) + [2] + quicksort([3])

_____________________________________________________

ðŸŒ³ Etapa 4: Casos-base

quicksort([]) â†’ []
quicksort([3]) â†’ [3]

_____________________________________________________

Agora voltamos subindo na recursÃ£o:

quicksort([2, 3])
â†’ [] + [2] + [3]
â†’ [2, 3]

_____________________________________________________

ðŸŒ² Subindo mais um nÃ­vel:

quicksort([5, 2, 3])
â†’ [2, 3] + [5] + []
â†’ [2, 3, 5]

_____________________________________________________

ðŸŒ² Subindo atÃ© o topo:

quicksort([10, 5, 2, 3])
â†’ [2, 3, 5] + [10] + []
â†’ [2, 3, 5, 10]

_____________________________________________________

âœ… Resultado final: [2, 3, 5, 10]